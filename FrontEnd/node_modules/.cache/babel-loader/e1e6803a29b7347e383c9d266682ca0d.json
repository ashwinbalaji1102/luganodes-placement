{"ast":null,"code":"import _slicedToArray from \"/Users/ashwinbalaji/Desktop/react-login-register-page-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ashwinbalaji/Desktop/react-login-register-page-master/src/components/pages/Alert.js\";\nimport style from \"../style.module.css\";\nimport css from \"classnames\";\nimport React from \"react\";\nimport { useState } from \"react\";\nexport default function Alert({\n  children,\n  type,\n  message,\n  state\n}) {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isShow = _useState2[0],\n        setIsShow = _useState2[1];\n\n  const renderElAlert = function () {\n    return React.cloneElement(children);\n  };\n\n  const handleClose = e => {\n    e.preventDefault();\n    setIsShow(false);\n  };\n\n  return React.createElement(\"div\", {\n    className: css(style.alert, style[type], !isShow && style.hide),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: style.closebtn,\n    onClick: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"\\xD7\"), children ? renderElAlert() : message);\n}","map":{"version":3,"sources":["/Users/ashwinbalaji/Desktop/react-login-register-page-master/src/components/pages/Alert.js"],"names":["style","css","React","useState","Alert","children","type","message","state","isShow","setIsShow","renderElAlert","cloneElement","handleClose","e","preventDefault","alert","hide","closebtn"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,qBAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAf,EAAmD;AAAA,oBAClCL,QAAQ,CAAC,IAAD,CAD0B;AAAA;AAAA,QACvDM,MADuD;AAAA,QAC/CC,SAD+C;;AAG9D,QAAMC,aAAa,GAAG,YAAY;AAChC,WAAOT,KAAK,CAACU,YAAN,CAAmBP,QAAnB,CAAP;AACD,GAFD;;AAIA,QAAMQ,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAET,GAAG,CAACD,KAAK,CAACgB,KAAP,EAAchB,KAAK,CAACM,IAAD,CAAnB,EAA2B,CAACG,MAAD,IAAWT,KAAK,CAACiB,IAA5C,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAEjB,KAAK,CAACkB,QAAvB;AAAiC,IAAA,OAAO,EAAEL,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGR,QAAQ,GAAGM,aAAa,EAAhB,GAAqBJ,OAJhC,CADF;AAQD","sourcesContent":["import style from \"../style.module.css\";\nimport css from \"classnames\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nexport default function Alert({ children, type, message, state }) {\n    const [isShow, setIsShow] = useState(true);\n  \n    const renderElAlert = function () {\n      return React.cloneElement(children);\n    };\n  \n    const handleClose = (e) => {\n      e.preventDefault();\n      setIsShow(false);\n    };\n  \n    return (\n      <div className={css(style.alert, style[type], !isShow && style.hide)}>\n        <span className={style.closebtn} onClick={handleClose}>\n          &times;\n        </span>\n        {children ? renderElAlert() : message}\n      </div>\n    );\n  }"]},"metadata":{},"sourceType":"module"}